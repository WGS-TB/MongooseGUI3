Please type which of the following models you would like to analyze: 


['model']


Valid option, please select functions from the dropdown menu(s)


>>> model.reduceNetwork()


1) Finding and deleting topology-blocked reactions.


2) Finding and deleting irreversibility-blocked reactions.


3) Finding and deleting stoichiometry-blocked reactions


4) Finding and processing the semi-blocked reactions


5) Finding and grouping reaction subsets.


6) Finding and deleting redundant constraints


None


>>> model.findTopoBlockedMetabolites()


[1, 2, 3, 4, 5, 8, 11, 13, 15, 17, 19, 22, 23, 24, 25, 28, 31, 33, 34, 36, 38, 40, 41, 42, 45, 46, 48, 49, 51, 52, 53, 57, 59, 61, 63, 64, 67, 70, 71, 73, 77, 78, 80, 81, 82, 83, 84, 85, 88, 91, 95, 96, 97, 100, 101, 103, 105, 106, 109, 111, 112, 113, 114, 116, 122, 123, 126, 129, 130, 131, 133, 138, 143, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 162, 163, 164, 166, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 192, 193, 198, 201, 202, 203, 205, 208, 209, 211, 212, 213, 214, 217, 218, 219, 223, 225, 227, 228, 229, 230, 234, 237, 238, 240, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 261, 262, 263, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 279, 282, 283, 284, 286, 287, 288, 290, 292, 293, 295, 296, 298, 299, 301, 306, 308, 310, 312, 313, 314, 316, 317, 320, 322, 323, 326, 327, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 341, 342, 344, 347, 348, 349, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 370, 372, 381, 387, 388, 391, 392, 393, 394, 395, 396, 398, 401, 402, 403, 406, 407, 409, 410, 411, 412, 413, 418, 419, 420, 421, 426, 428, 429, 430, 431, 433, 436, 438, 439, 442, 444, 445, 446, 447, 451, 452, 453, 454, 455, 456, 457, 459, 461, 462, 463, 464, 465, 466, 470, 471, 473, 474, 475, 480, 482, 483, 484, 485, 486, 488, 489, 490, 491, 494, 495, 496, 499, 500, 503, 504, 505, 508, 509, 510, 513, 515, 517, 518, 519, 522, 523, 526, 527, 534, 536, 537, 538, 545, 546, 547, 549, 550, 551, 552, 554, 558, 559, 560, 561, 562, 563, 564, 567, 568, 570, 571, 572, 575, 577, 580, 584, 585, 587, 588, 593, 596, 598, 600, 604, 605, 607, 608, 613, 614, 615, 616, 617, 621, 622, 623, 624, 627, 631, 633, 634, 635, 636, 638, 639, 640, 641, 649, 651, 653, 654, 655, 657, 660, 663, 664, 665, 669, 671, 672, 674, 676, 678, 679, 680, 684, 690, 691, 695, 697, 698, 699, 700, 702, 704, 705, 706, 707, 708, 710, 717, 718, 722, 724, 725, 728, 729, 731, 736, 737, 738, 739, 740, 741, 742, 745, 746, 747, 748, 751, 754, 758, 759, 760, 762, 764, 767, 768, 770, 773, 775, 778, 779, 780, 781, 782, 785, 786, 788, 790, 792, 793, 794, 798, 799, 800, 801, 803, 806, 807, 808, 810, 811, 816, 819, 822, 824, 825, 826, 827, 831, 834, 835, 837, 838, 840, 841, 842, 846, 847, 852, 855, 856, 858, 859, 861, 862, 863, 864, 865, 866, 867, 868, 869, 870, 871, 872, 874, 875, 876, 879, 880, 881, 883, 884, 886, 887, 888, 891, 892, 894, 896, 897, 898, 899, 900, 901, 904, 905, 906, 908, 909, 910, 911, 912, 913, 914, 916, 917, 918, 919, 920, 922, 924, 925, 927, 929, 931, 932, 935, 936, 937, 938, 942, 945, 946, 949, 953, 954, 955, 956, 957, 958, 959, 960, 961, 962, 964, 966, 967, 968, 971, 972, 973, 975, 976, 977, 980, 981, 982, 983, 986, 988, 989, 990, 992, 994, 996]


>>> model.findTopoBlockedReactions()


[0, 16, 39, 40, 43, 44, 45, 46, 47, 48, 50, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 82, 83, 89, 95, 98, 99, 101, 102, 108, 109, 110, 112, 113, 114, 118, 120, 123, 124, 125, 127, 128, 131, 132, 147, 160, 165, 167, 169, 172, 179, 180, 181, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 224, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 259, 262, 268, 271, 277, 282, 284, 286, 287, 288, 289, 292, 295, 297, 310, 311, 316, 338, 339, 341, 343, 344, 347, 349, 350, 361, 364, 365, 366, 367, 370, 371, 373, 375, 376, 377, 379, 382, 386, 390, 391, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 408, 409, 424, 425, 426, 435, 441, 442, 445, 450, 455, 462, 463, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 539, 542, 543, 544, 545, 546, 560, 561, 562, 563, 564, 566, 567, 568, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 583, 584, 585, 587, 588, 589, 592, 594, 598, 599, 600, 601, 602, 603, 604, 605, 606, 607, 608, 609, 610, 611, 612, 613, 614, 615, 616, 617, 618, 619, 620, 621, 622, 623, 624, 625, 627, 628, 629, 640, 641, 642, 643, 644, 645, 646, 647, 648, 649, 650, 651, 656, 657, 658, 662, 675, 676, 681, 682, 683, 684, 685, 686, 702, 703, 715, 716, 717, 718, 719, 720, 721, 722, 723, 726, 727, 730, 731, 732, 733, 734, 735, 737, 738, 739, 740, 741, 742, 743, 750, 751, 752, 753, 754, 755, 756, 757, 758, 759, 760, 762, 766, 767, 768, 769, 871, 872, 874, 887, 890]


>>> model.findStoichBlockedReactions()


[4, 49, 52, 107, 119, 245, 250, 251, 264, 283, 285, 299, 302, 309, 327, 380, 403, 440, 443, 457, 570, 736, 788]


>>> model.findIrrevBlockedReactions()


[51, 53, 81, 94, 111, 121, 122, 129, 130, 161, 162, 163, 164, 166, 168, 170, 171, 173, 174, 175, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 216, 217, 218, 225, 226, 244, 246, 247, 248, 249, 256, 257, 258, 260, 261, 263, 269, 270, 276, 280, 294, 298, 303, 319, 321, 323, 324, 326, 328, 332, 348, 368, 369, 378, 397, 439, 451, 452, 453, 454, 456, 515, 552, 631, 632, 633, 634, 635, 636, 637, 638, 639, 653, 654, 655, 661, 664, 671, 672, 673, 674, 677, 678, 679, 680, 687, 689, 690, 691, 692, 693, 694, 695, 705, 724, 725, 728, 729, 744, 745, 746, 747, 748, 749, 764, 770, 875, 876, 877, 878, 879, 880, 881, 882, 883, 884, 885, 886, 889]


>>> model.findSemiBlockedReactions()


[32, 243, 387, 537, 707, 712, 791, 796, 813, 829, 832, 835, 845, 858, 861]


>>> model.unblockBiomassReaction()


Returning a list of metabolites that can be unconstrained


[447]


>>> model.findEssentialReactions()


Warning: not all reactions on the list have survived the reduction!


>>> model.findSyntheticLethalPairs()


Warning: not all reactions on the list have survived the reduction!


>>> model.findMinimalMedia()

